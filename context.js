// Generated by CoffeeScript 1.6.3
(function() {
  var AMFContext, exports, typeOf;

  typeOf = function(object) {
    var funcNameRegex, results;
    if (object === null) {
      return null;
    }
    if (object === void 0) {
      return void 0;
    }
    funcNameRegex = /function (.{1,})\(/;
    results = funcNameRegex.exec(object.constructor.toString());
    if (results && results.length > 1) {
      return results[1];
    } else {
      return '';
    }
  };

  AMFContext = (function() {
    function AMFContext() {}

    AMFContext.prototype.clear = function() {
      this._objectReferences = [];
      this._classReferences = [];
      return this._stringReferences = [];
    };

    AMFContext.prototype._objectReferences = [];

    AMFContext.prototype._classReferences = [];

    AMFContext.prototype._registeredClasses = [];

    AMFContext.prototype._stringReferences = [];

    AMFContext.prototype.getObjectFromReference = function(ref) {
      return this._objectReferences[ref];
    };

    AMFContext.prototype.getObjectReference = function(object) {
      return this._objectReferences.indexOf(object);
    };

    AMFContext.prototype.getClassFromReference = function(ref) {
      var found;
      found = this._classReferences[ref];
      if (found) {
        return found;
      }
      return -1;
    };

    AMFContext.prototype.getClassReference = function(name) {
      var found;
      found = this._classReferences.filter(function(data) {
        return data.name === name;
      });
      if (found.length > 0) {
        return this._classReferences.indexOf(found[0]);
      }
      return -1;
    };

    AMFContext.prototype.addObject = function(object) {
      return this._objectReferences.push(object);
    };

    AMFContext.prototype.addClass = function(name, klass) {
      var obj, ref;
      ref = this._classReferences.length;
      obj = {
        name: name,
        klass: klass,
        reference: ref
      };
      return this._classReferences.push(obj);
    };

    AMFContext.prototype.addString = function(string) {
      return this._stringReferences.push(string);
    };

    AMFContext.prototype.getStringReference = function(string) {
      return this._stringReferences.indexOf(string);
    };

    AMFContext.prototype.getStringFromReference = function(ref) {
      return this._stringReferences[ref];
    };

    AMFContext.prototype.findClass = function(name) {
      var found;
      found = this._registeredClasses.filter(function(klass) {
        return klass.name === name;
      });
      if (found.length > 0) {
        return found[0];
      } else {
        return false;
      }
    };

    AMFContext.prototype.registerClass = function(klass) {
      this._registeredClasses.push({
        name: klass._amf.name,
        alias: klass._amf.alias || klass._amf.name,
        klass: klass
      });
      return console.log(this._registeredClasses);
    };

    AMFContext.prototype.getClassByName = function(name) {
      if (name === 'ArrayCollection') {
        return require('./messaging').ArrayCollection;
      } else if (name === 'AcknowledgeMessage') {
        return require('./messaging').AcknowledgeMessage;
      } else if (name === 'ASObject') {
        return require('./messaging').ASObject;
      }
    };

    AMFContext.prototype.getClassByAlias = function(alias) {};

    AMFContext.prototype.getClassByObject = function(object) {
      return getClassByName(typeOf(object));
    };

    return AMFContext;

  })();

  module.exports = exports = AMFContext;

}).call(this);
